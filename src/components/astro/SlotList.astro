---
import moment from 'moment'
import 'moment/locale/es'
import { db, eq, and, User_Slot, inArray, Slot, User } from 'astro:db'
import { getWeekDayNames } from '@/lib/types/utils'
import type { Usuario } from '@/lib/types/bbdd'
import List from './List.astro'

const { member } = Astro.props

const now = moment()
const dates: string[] = []
const week_days_map: number[] = Object.keys(getWeekDayNames()).map(Number)

for (let i = 0; i <= 20; i++) {
  dates.push(now.clone().add(i, 'days').format('YYYY-MM-DD'))
}

const slots = await db
  .select()
  .from(Slot)
  .where(inArray(Slot.week_day, week_days_map))
  .innerJoin(
    User_Slot,
    and(
      eq(User_Slot.slot_id, Slot.id),
      eq(User_Slot.default, false),
      eq(User_Slot.user_id, member.id),
      inArray(User_Slot.date, dates)
    )
  )
  .limit(15)
  .all()

const user_ids: string[] = []
for (const slot of slots) {
  if (slot.Slot && slot.Slot.user_id) {
    user_ids.push(slot.Slot.user_id)
  }
}

const user_map: Map<string, Usuario> = new Map<string, Usuario>()
if (user_ids && user_ids.length > 0) {
  const users = await db.select().from(User).where(inArray(User.id, user_ids)).all()

  if (users && users.length > 0) {
    users.forEach((user) => {
      user_map.set(user.id, user)
    })
  }
}
---

<List title="Proximas de clases programadas">
  {
    (slots &&
      slots.length > 0 &&
      slots.map((slot) => (
        <li class="py-2 hover:bg-gray-50">
          <a href={'/slots/' + slot.Slot.id + '?date=' + slot.User_Slot.date}>
            <span class="grid grid-cols-4 gap-x-2">
              <span class="col-span-3 uppercase inline-flex items-center rounded-md bg-gray-100 px-2 py-1 text-xs font-medium text-black">
                {moment(slot?.User_Slot?.date).format('dddd, DD [de] MMMM [de] YYYY') +
                  ', ' +
                  moment({
                    hour: Math.floor(slot.Slot.start_hour),
                    minute: Math.floor((slot.Slot.start_hour % 1) * 60)
                  }).format('HH:mm')}
              </span>
              <span class="uppercase inline-flex items-center rounded-md bg-red-200 px-2 py-1 text-xs font-medium text-black">
                {user_map.get(slot.Slot.user_id)?.name}
              </span>
            </span>
          </a>
        </li>
      ))) || (
      <li class="px-4 py-4 sm:px-6">
        <div class="text-center text-gray-500">No hay clases programadas.</div>
      </li>
    )
  }
</List>
