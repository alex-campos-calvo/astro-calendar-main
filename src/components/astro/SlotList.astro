---
import moment from 'moment'
import 'moment/locale/es'
import { db, eq, and, User_Slot, inArray, Slot, User } from 'astro:db'
import { getWeekDayNames } from '@/lib/types/utils'
import type { Usuario } from '@/lib/types/bbdd'

const { member } = Astro.props

const now = moment()
const dates: string[] = []
const week_days_map: number[] = Object.keys(getWeekDayNames()).map(Number)

for (let i = 0; i <= 20; i++) {
  dates.push(now.clone().add(i, 'days').format('YYYY-MM-DD'))
}

const slots = await db
  .select()
  .from(Slot)
  .where(inArray(Slot.week_day, week_days_map))
  .innerJoin(
    User_Slot,
    and(
      eq(User_Slot.slot_id, Slot.id),
      eq(User_Slot.default, false),
      eq(User_Slot.user_id, member.id),
      inArray(User_Slot.date, dates)
    )
  )
  .limit(15)
  .all()

const user_ids: string[] = []
for (const slot of slots) {
  if (slot.Slot && slot.Slot.user_id) {
    user_ids.push(slot.Slot.user_id)
  }
}

const user_map: Map<string, Usuario> = new Map<string, Usuario>()
if (user_ids && user_ids.length > 0) {
  const users = await db.select().from(User).where(inArray(User.id, user_ids)).all()

  if (users && users.length > 0) {
    users.forEach((user) => {
      user_map.set(user.id, user)
    })
  }
}
---

<div class="p-2 border border-fuchsia-500 bg-fuchsia-50 rounded-md">
  <label for="name" class="block text-sm/6 font-medium text-gray-900">Proximas de clases</label>
  <ul
    role="list"
    class="overflow-hidden divide-y bg-white ring-1 ring-black rounded-md shadow-md mt-2 py-2 px-4"
  >
    {
      (slots &&
        slots.length > 0 &&
        slots.map((slot) => (
          <li class="relative p-2 hover:bg-gray-50">
            <div class="flex min-w-0 gap-x-4">
              <div class="min-w-0 flex-auto">
                <div class="text-sm/6 font-semibold text-gray-900">
                  <a href={'/slots/' + slot.Slot.id + '?date=' + slot.User_Slot.date}>
                    <span class="uppercase inline-flex items-center rounded-md bg-gray-100 px-2 py-1 text-xs font-medium text-black">
                      {moment(slot?.User_Slot?.date).format('dddd, DD [de] MMMM [de] YYYY') +
                        ', ' +
                        moment({
                          hour: Math.floor(slot.Slot.start_hour),
                          minute: Math.floor((slot.Slot.start_hour % 1) * 60)
                        }).format('HH:mm')}
                    </span>
                    <span class="uppercase inline-flex items-center rounded-md bg-red-200 px-2 py-1 text-xs font-medium text-black">
                      {user_map.get(slot.Slot.user_id)?.name}
                    </span>
                    <span />
                  </a>
                </div>
              </div>
            </div>
          </li>
        ))) || (
        <li class="px-4 py-4 sm:px-6">
          <div class="text-center text-gray-500">No hay clases programadas.</div>
        </li>
      )
    }
  </ul>
</div>
