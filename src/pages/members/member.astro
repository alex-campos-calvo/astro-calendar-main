---
import { generateId } from 'lucia'
import { db, eq, User } from 'astro:db'
import Layout from '@/layouts/Layout.astro'
import { validateName, validateEmail } from '@/lib/validations/type-validations'

const member_id: string | null = Astro.url.searchParams.get('id')
const role: string | null = Astro.url.searchParams.get('role')

const member_data = {
  info: {
    id: '',
    name: '',
    email: '',
    is_admin: role === 'admin' ? true : false,
    is_active: true
  },
  errors: {
    name: '',
    email: ''
  }
}
if (Astro.request.method === 'POST') {
  const data = await Astro.request.formData()
  const id = (data.get('id') as string)?.trim()
  const name = (data.get('name') as string)?.trim()
  const email = (data.get('email') as string)?.trim()
  const admin = (data.get('is_admin') as string)?.trim()
  const active = (data.get('is_active') as string)?.trim()

  if (!validateName(name)) {
    member_data.errors.name =
      'Por favor, introduce un nombre válido (Tamaño entre 3 y 255 caracteres).'
  }

  if (!validateEmail(email)) {
    member_data.errors.email = 'Por favor, introduce una dirección de email válida.'
  }

  const is_admin = admin === 'on' ? true : false
  const is_active = active === 'on' ? true : false
  const hasErrors = Object.values(member_data.errors).some((e) => e)
  if (!hasErrors) {
    if (id) {
      await db
        .update(User)
        .set({ id: id, name: name, email: email, is_active: is_active, is_admin: is_admin })
        .where(eq(User.id, id))
      return Astro.redirect('/members/users')
    } else {
      const existingUser = await db
        .select()
        .from(User)
        .where(eq(User.email, email.toLowerCase()))
        .get()
      if (!existingUser) {
        const userId = generateId(15)
        await db.insert(User).values({
          id: userId,
          name: name,
          email: email.toLowerCase(),
          is_admin: is_admin,
          is_active: is_active
        })
        return Astro.redirect('/members/users')
      } else {
        member_data.errors.email = 'Ese email ya está siendo usado por un usuario'
      }
    }
  }
} else {
  if (member_id) {
    const member = await db.select().from(User).where(eq(User.id, member_id)).all()

    if (member && member.length > 0 && member[0]) {
      member_data.info.id = member[0].id
      member_data.info.name = member[0].name
      member_data.info.email = member[0].email
      member_data.info.is_admin = member[0].is_admin
      member_data.info.is_active = member[0].is_active
    }

    if (role === 'delete') {
      try {
        await db.delete(User).where(eq(User.id, member_id))
        return Astro.redirect('/members/users')
      } catch (error) {
        console.error(error)
        member_data.errors.name = 'No se ha podido eliminar el usuario, tiene clases asociadas.'
      }
    }
  }
}
---

<Layout title="Listado de miembros">
  <div class="overflow-hidden bg-white border border-gray-200 shadow sm:rounded-lg">
    <form class="p-4" method="POST">
      <div class="space-y-12">
        <div class="border-b border-gray-900/10 pb-12">
          <h2
            class="text-base/7 font-semibold text-gray-900 uppercase text-center pb-4 border-b border-gray-900/10"
          >
            Creación de nuevo usuario
          </h2>
          <div class="mt-10 grid grid-cols-1 gap-x-6 gap-y-8 lg:grid-cols-3">
            <div class="col-span-1 lg:col-start-2">
              <label for="name" class="block text-sm/6 font-medium text-gray-900"
                >Nombre completo</label
              >
              <div class="mt-2">
                <input
                  type="text"
                  name="name"
                  id="name"
                  autocomplete="name"
                  required
                  value={member_data.info.name}
                  class="block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-fuchsia-600 sm:text-sm/6"
                />
              </div>
              <span class="text-red-500 text-sm/6 font-semibold">{member_data.errors.name}</span>
            </div>

            <div class="col-span-1 lg:col-start-2">
              <label for="email" class="block text-sm/6 font-medium text-gray-900"
                >Email address</label
              >
              <div class="mt-2">
                <input
                  id="email"
                  name="email"
                  type="email"
                  autocomplete="email"
                  required
                  value={member_data.info.email}
                  class="block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-fuchsia-600 sm:text-sm/6"
                />
              </div>
              <span class="text-red-500 text-sm/6 font-semibold">{member_data.errors.email}</span>
            </div>

            <div class="col-span-1 lg:col-start-2">
              <div class="flex gap-3">
                <div class="flex h-6 shrink-0 items-center">
                  <div class="group grid size-4 grid-cols-1">
                    <input
                      id="is_admin"
                      aria-describedby="is_admin-description"
                      name="is_admin"
                      type="checkbox"
                      checked={member_data.info.is_admin}
                      class="col-start-1 row-start-1 appearance-none rounded border border-gray-300 bg-white checked:border-indigo-600 checked:bg-indigo-600 indeterminate:border-indigo-600 indeterminate:bg-indigo-600 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 disabled:border-gray-300 disabled:bg-gray-100 disabled:checked:bg-gray-100 forced-colors:appearance-auto"
                    />
                    <svg
                      class="pointer-events-none col-start-1 row-start-1 size-3.5 self-center justify-self-center stroke-white group-has-[:disabled]:stroke-gray-950/25"
                      viewBox="0 0 14 14"
                      fill="none"
                    >
                      <path
                        class="opacity-0 group-has-[:checked]:opacity-100"
                        d="M3 8L6 11L11 3.5"
                        stroke-width="2"
                        stroke-linecap="round"
                        stroke-linejoin="round"></path>
                      <path
                        class="opacity-0 group-has-[:indeterminate]:opacity-100"
                        d="M3 7H11"
                        stroke-width="2"
                        stroke-linecap="round"
                        stroke-linejoin="round"></path>
                    </svg>
                  </div>
                </div>
                <div class="text-sm/6">
                  <label for="is_admin" class="font-medium text-gray-900"
                    >¿Convertir en administrador?</label
                  >
                  <p id="is_admin-description" class="text-gray-500">
                    Si se selecciona, el usuario tendrá acceso a todas las funciones de
                    administración de calendario, usuarios y clases.
                  </p>
                </div>
              </div>
            </div>

            <div class="col-span-1 lg:col-start-2">
              <div class="flex gap-3">
                <div class="flex h-6 shrink-0 items-center">
                  <div class="group grid size-4 grid-cols-1">
                    <input
                      id="is_active"
                      aria-describedby="is_active-description"
                      name="is_active"
                      type="checkbox"
                      checked={member_data.info.is_active}
                      class="col-start-1 row-start-1 appearance-none rounded border border-gray-300 bg-white checked:border-indigo-600 checked:bg-indigo-600 indeterminate:border-indigo-600 indeterminate:bg-indigo-600 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 disabled:border-gray-300 disabled:bg-gray-100 disabled:checked:bg-gray-100 forced-colors:appearance-auto"
                    />
                    <svg
                      class="pointer-events-none col-start-1 row-start-1 size-3.5 self-center justify-self-center stroke-white group-has-[:disabled]:stroke-gray-950/25"
                      viewBox="0 0 14 14"
                      fill="none"
                    >
                      <path
                        class="opacity-0 group-has-[:checked]:opacity-100"
                        d="M3 8L6 11L11 3.5"
                        stroke-width="2"
                        stroke-linecap="round"
                        stroke-linejoin="round"></path>
                      <path
                        class="opacity-0 group-has-[:indeterminate]:opacity-100"
                        d="M3 7H11"
                        stroke-width="2"
                        stroke-linecap="round"
                        stroke-linejoin="round"></path>
                    </svg>
                  </div>
                </div>
                <div class="text-sm/6">
                  <label for="is_active" class="font-medium text-gray-900">¿Activar usuario?</label>
                  <p id="is_active-description" class="text-gray-500">
                    Si se selecciona, el usuario se tendrá en cuenta en la asignación de clases y
                    podrá entrar en el sistema para ver sus clases.
                  </p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <div class="mt-6 flex items-center">
        {
          member_data.info.id && (
            <button
              id="delete"
              data-id={member_data.info.id}
              type="button"
              class="place-self-start rounded-md bg-red-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-red-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-red-600"
            >
              Eliminar
            </button>
          )
        }
        <input type="hidden" name="id" value={member_data.info.id} />
        <div class="w-full flex justify-end gap-x-6">
          <button id="cancel" type="button" class="text-sm/6 font-semibold text-gray-900"
            >Cancelar</button
          >
          <button
            type="submit"
            class="rounded-md bg-fuchsia-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-fuchsia-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-fuchsia-600"
            >Guardar</button
          >
        </div>
      </div>
    </form>
  </div>
</Layout>

<script>
  const delete_button = document.getElementById('delete')
  delete_button?.addEventListener('click', () => {
    window.location.href = '/members/member?id=' + delete_button.dataset.id + '&role=delete'
  })
  document.getElementById('cancel')?.addEventListener('click', () => {
    window.location.href = '/members/users'
  })
</script>
