---
import { db, eq, User } from 'astro:db'
import Layout from '@/layouts/Layout.astro'
import SlotList from '@/components/astro/SlotList.astro'
import TitleHeader from '@/components/astro/TitleHeader.astro'
import { getShortName } from '@/lib/types/utils'
import { PencilSquareIcon } from '@heroicons/react/24/outline'
import Save from '@/components/react/member/Save'
import Delete from '@/components/react/member/Delete'

const member_id: string | undefined = Astro.params.id
const edit_mode = Astro.url.searchParams.get('edit') === 'true'

if (!member_id) {
  return Astro.redirect('/members/users')
}

const member = await db.select().from(User).where(eq(User.id, member_id)).all()

let member_data = {
  id: member_id,
  name: '',
  email: '',
  description: '',
  is_admin: false,
  is_active: false,
  short_name: ''
}
if ((!member || !member[0]) && member_id !== 'new') {
  return Astro.redirect('/members/users')
} else if (member && member[0]) {
  member_data = {
    id: member[0].id,
    name: member[0].name,
    email: member[0].email,
    description: member[0].description ?? '',
    is_admin: member[0].is_admin,
    is_active: member[0].is_active,
    short_name: getShortName(member[0].name)
  }
}
---

<Layout title="Detalle del usuario">
  <TitleHeader title="Detalle del usuario">
    {edit_mode && member_id !== 'new' && (
      <Delete client:load/>
    )}
  </TitleHeader>
  <dl class="lg:flex">
    <div class="relative lg:w-2/3 h-fit p-4 grid gap-y-3 border border-gray rounded-md shadow">
      <div class="grid grid-cols-1 gap-y-4 lg:grid-cols-2 lg:gap-y-0 lg:gap-x-4">
        <div>
          <label for="name" class="block text-sm/6 font-medium text-gray-900">Nombre completo</label>
          <div class="mt-2">
            <input
              type="text"
              name="name"
              id="name"
              autocomplete="name"
              value={member_data.name}
              class="block w-full rounded-md bg-white px-3 py-1.5 text-base outline outline-1 -outline-offset-1 outline-gray-500 placeholder:text-gray-400 sm:text-sm/6"
              required
              {...(edit_mode && { disabled: false }) || { disabled: true }}
            />
          </div>
        </div>

        <div>
          <label for="email" class="block text-sm/6 font-medium text-gray-900"
            >Dirección de email</label
          >
          <div class="mt-2">
            <input
              id="email"
              name="email"
              type="email"
              autocomplete="email"
              value={member_data.email}
              class="block w-full rounded-md bg-white px-3 py-1.5 text-base outline outline-1 -outline-offset-1 outline-gray-500 placeholder:text-gray-400 sm:text-sm/6"
              required
              {...(edit_mode && { disabled: false }) || { disabled: true }}
            />
          </div>
        </div>
      </div>

      <div>
        <label for="description" class="block text-sm/6 font-medium text-gray-900"
          >Descripción</label
        >
        <div class="mt-2">
          <textarea
            id="description"
            rows="4"
            name="description"
            autocomplete="description"
            class="block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6"
            required
            {...(edit_mode && { disabled: false }) || { disabled: true }}
            >{member_data.description}</textarea
          >
        </div>
      </div>

      <div class="flex gap-3">
        <div class="flex h-6 shrink-0 items-center">
          <div class="group grid size-4 grid-cols-1">
            <input
              id="is_admin"
              aria-describedby="is_admin-description"
              name="is_admin"
              type="checkbox"
              checked={member_data.is_admin}
              class="col-start-1 row-start-1 appearance-none rounded border border-gray-300 bg-white checked:border-indigo-600 checked:bg-indigo-600 indeterminate:border-indigo-600 indeterminate:bg-indigo-600 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 disabled:border-gray-300 disabled:bg-gray-100 disabled:checked:bg-gray-100 forced-colors:appearance-auto"
              {...(edit_mode && { disabled: false }) || { disabled: true }}
            />
          </div>
        </div>
        <div class="text-sm/6">
          <label for="is_admin" class="font-medium text-gray-900">Usuario administrador</label>
        </div>
      </div>

      <div class="flex gap-3">
        <div class="flex h-6 shrink-0 items-center">
          <div class="group grid size-4 grid-cols-1">
            <input
              id="is_active"
              aria-describedby="is_active-description"
              name="is_active"
              type="checkbox"
              checked={member_data.is_active}
              class="col-start-1 row-start-1 appearance-none rounded border border-gray-300 bg-white checked:border-indigo-600 checked:bg-indigo-600 indeterminate:border-indigo-600 indeterminate:bg-indigo-600 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 disabled:border-gray-300 disabled:bg-gray-100 disabled:checked:bg-gray-100 forced-colors:appearance-auto"
              {...(edit_mode && { disabled: false }) || { disabled: true }}
            />
          </div>
        </div>
        <div class="text-sm/6">
          <label for="is_active" class="font-medium text-gray-900">Usuario activo</label>
        </div>
      </div>

      {!edit_mode &&
        <a href={'?edit=true'}
          class="absolute right-4 bottom-4 w-24 h-12 inline-flex items-center justify-center bg-transparent font-semibold px-2 border border-gray-300 hover:border-fuchsia-500 rounded shadow"
        >
          <PencilSquareIcon className="size-5" aria-hidden="true"></PencilSquareIcon>
          Editar
        </a>
      }
      {
        edit_mode && (
          <input type="hidden" id="id" name="id" value={member_id} />
          <Save client:load/>
        )
      }
    </div>
    <div class="flex-1 mx-0 my-4 lg:mx-4 lg:my-0">
      <div class="grid grid-cols-1 gap-y-4">
        <SlotList member={member_data} />
      </div>
    </div>
  </dl>
</Layout>
